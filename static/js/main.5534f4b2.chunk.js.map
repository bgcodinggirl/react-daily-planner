{"version":3,"sources":["pages/Home.js","constants/Constants.js","api/API.js","pages/MondayDailyPlanner.js","pages/TuesdayDailyPlanner.js","layouts/MainLayout.js","pages/WednesdayDailyPlanner.js","pages/ThursdayDailyPlanner.js","pages/FridayDailyPlanner.js","pages/SaturdayDailyPlanner.js","pages/SundayDailyPlanner.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","Component","Constants","BASE_URL","API","get","url","success","error","this","request","method","post","data","put","delete","options","Object","assign","baseURL","undefined","params","api_token","Promise","resolve","reject","axios","then","response","catch","alert","MondayDailyPlanner","state","schedule","newNoteData","time","note","editNoteData","id","newNoteModal","editNoteModal","_refreshSchedule","setState","push","res","_","o","map","item","key","Button","color","size","onClick","editNote","bind","IconButton","aria-label","deleteNote","toggleNewNoteModal","Modal","isOpen","toggle","ModalHeader","ModalBody","FormGroup","Label","for","Input","value","onChange","e","target","type","ModalFooter","addNote","toggleEditNoteModal","updateNote","Table","TuesdayDailyPlanner","MainLayout","props","to","children","WednesdayDailyPlanner","ThursdayDailyPlanner","FridayDailyPlanner","SaturdayDailyPlanner","SundayDailyPlanner","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.5534f4b2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"homeDiv\">\r\n              <h1>Daily Planner</h1>\r\n              <h2>The secret weapon of successful people</h2>\r\n              <p>\r\n               <h5>Successful people constantly evaluate what they're spending their time on.</h5>\r\n               Daily planning can help you save precious time and focus on your most critical goals.</p>\r\n               <footer>\r\n                   This page is created by Sanie Mehmet.\r\n               </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","const Constants = {\r\n    BASE_URL: 'http://localhost:3000/'\r\n}\r\n\r\nexport default Constants;","import Constants from '../constants/Constants';\r\nimport axios from 'axios';\r\n\r\nconst API = {\r\n    get(url, success, error){\r\n        return this.request({\r\n            method: \"GET\",\r\n            url,\r\n            success,\r\n            error\r\n        })\r\n    },\r\n    post(url, data, success, error){\r\n        return this.request({\r\n            method: \"POST\",\r\n            url,\r\n            data,\r\n            success,\r\n            error\r\n        })\r\n    },\r\n    put(url, data, success, error){\r\n        return this.request({\r\n            method: \"PUT\",\r\n            url,\r\n            data,\r\n            success,\r\n            error\r\n        })\r\n    },\r\n    delete(url, success, error){\r\n        return this.request({\r\n            method: \"DELETE\",\r\n            url,\r\n            success,\r\n            error\r\n        })\r\n    },\r\n    request: (options = {}) => {\r\n          if(!options.url){\r\n              alert('URL is not set!');\r\n              return;\r\n          }\r\n\r\n          let data = Object.assign(\r\n            {\r\n              method: 'GET',\r\n              baseURL: Constants.BASE_URL\r\n            },\r\n            options\r\n          );\r\n        if(data.params === undefined){\r\n            data.params = {};\r\n        }\r\n\r\n       // Cookies.get('api.token')\r\n       const api_token = 'hardcoded_token';\r\n       if(api_token){\r\n           data.params = Object.assign(data.params,{api_token: api_token});\r\n       }\r\n       /*\r\n       data.headers = {\r\n           Authorization:'Bearer token'\r\n       }\r\n       */\r\n       return new Promise((resolve, reject)=>{\r\n           axios(data)\r\n           .then(response => {\r\n               if(options.success){\r\n                   options.success(response.data);\r\n               }\r\n               resolve(response.data);\r\n           })\r\n           .catch(error => {\r\n               if(options.error){\r\n                   options.error(error);\r\n               }\r\n               reject(error);\r\n           })\r\n       })\r\n\r\n    }\r\n}\r\n\r\nexport default API;","import React, { Component } from 'react';\r\nimport API from '../api/API';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button } from 'reactstrap';\r\nimport * as _ from 'lodash';\r\n\r\nclass MondayDailyPlanner extends Component {\r\n    state = {\r\n    schedule: [],\r\n    newNoteData: {\r\n      time: '',\r\n      note: ''\r\n    },\r\n    editNoteData: {\r\n      id: '',\r\n      time: '',\r\n      note: ''\r\n    },\r\n    newNoteModal: false,\r\n    editNoteModal: false\r\n  }\r\n  componentWillMount() {\r\n    this._refreshSchedule();\r\n  }\r\n  toggleNewNoteModal() {\r\n    this.setState({\r\n      newNoteModal: ! this.state.newNoteModal\r\n    });\r\n  }\r\n  toggleEditNoteModal() {\r\n    this.setState({\r\n      editNoteModal: ! this.state.editNoteModal\r\n    });\r\n  }\r\n  addNote() {\r\n      API.post('mondaySchedule',this.state.newNoteData).then((response) => {\r\n          let schedule = this.state.schedule;\r\n          schedule.push(response);\r\n          this.setState({schedule,newNoteModal:false,newNoteData:{\r\n              time:'',\r\n              note: '',\r\n          }})\r\n      });\r\n  }\r\n  updateNote() {\r\n    let { time,note } = this.state.editNoteData;\r\n    API.put('mondaySchedule/'+this.state.editNoteData.id,{time,note}).then((response)=> {\r\n        this._refreshSchedule();\r\n        this.setState({\r\n            editNoteModal: false, editNoteData: { id:'', time:'', note:''}\r\n        })\r\n    });\r\n    \r\n  }\r\n  editNote(id, time, note) {\r\n    this.setState({\r\n      editNoteData: { id, time, note }, editNoteModal: ! this.state.editNoteModal\r\n    });\r\n  }\r\n  deleteNote(id) {\r\n    API.delete('mondaySchedule/'+id)\r\n    .then(res => {\r\n        this._refreshSchedule();\r\n    })\r\n  }\r\n  _refreshSchedule() {\r\n    API.get('mondaySchedule')\r\n    .then(schedule => {\r\n        this.setState({schedule:schedule});\r\n    })\r\n  }\r\n  render() {\r\n    let schedule = this.state.schedule;\r\n    schedule=_.sortBy(schedule,o=>o.time).map((item) => {\r\n      return (\r\n        <tr key={item.id}>\r\n          <td>{item.time}</td>\r\n          <td>{item.note}</td>\r\n          <td>\r\n            <Button color=\"success\" size=\"sm\" className=\"mr-2\" onClick={this.editNote.bind(this, item.id,item.time, item.note)}>Edit</Button>\r\n            <IconButton aria-label=\"delete\" color=\"secondary\" onClick={this.deleteNote.bind(this, item.id)}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n    return (\r\n      <div className=\"Planner\">\r\n\r\n      <h1>Monday</h1>\r\n\r\n      <Button className=\"my-3\" color=\"primary\" onClick={this.toggleNewNoteModal.bind(this)}>Add a note/task</Button>\r\n\r\n      <Modal isOpen={this.state.newNoteModal} toggle={this.toggleNewNoteModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleNewNoteModal.bind(this)}>Add a new note</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"note\">Note/Task</Label>\r\n            <Input id=\"note\" value={this.state.newNoteData.note} onChange={(e) => {\r\n              let { newNoteData } = this.state;\r\n\r\n              newNoteData.note = e.target.value;\r\n\r\n              this.setState({ newNoteData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"time\">Time</Label>\r\n            <Input id=\"time\" type=\"time\" value={this.state.newNoteData.time} onChange={(e) => {\r\n              let { newNoteData } = this.state;\r\n\r\n              newNoteData.time = e.target.value;\r\n\r\n              this.setState({ newNoteData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.addNote.bind(this)}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleNewNoteModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={this.state.editNoteModal} toggle={this.toggleEditNoteModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleEditNoteModal.bind(this)}>Edit a new product</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"note\">Note/Task</Label>\r\n            <Input id=\"note\" value={this.state.editNoteData.note} onChange={(e) => {\r\n              let { editNoteData } = this.state;\r\n\r\n              editNoteData.note = e.target.value;\r\n\r\n              this.setState({ editNoteData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"time\">Time</Label>\r\n            <Input id=\"time\" type=\"time\" value={this.state.editNoteData.time} onChange={(e) => {\r\n              let { editNoteData } = this.state;\r\n\r\n              editNoteData.time = e.target.value;\r\n\r\n              this.setState({ editNoteData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.updateNote.bind(this)}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleEditNoteModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Schedule</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {schedule}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MondayDailyPlanner;","import React, { Component } from 'react';\r\nimport API from '../api/API';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button } from 'reactstrap';\r\nimport * as _ from 'lodash';\r\n\r\nclass TuesdayDailyPlanner extends Component {\r\n    state = {\r\n    schedule: [],\r\n    newNoteData: {\r\n      time: '',\r\n      note: ''\r\n    },\r\n    editNoteData: {\r\n      id: '',\r\n      time: '',\r\n      note: ''\r\n    },\r\n    newNoteModal: false,\r\n    editNoteModal: false\r\n  }\r\n  componentWillMount() {\r\n    this._refreshSchedule();\r\n  }\r\n  toggleNewNoteModal() {\r\n    this.setState({\r\n      newNoteModal: ! this.state.newNoteModal\r\n    });\r\n  }\r\n  toggleEditNoteModal() {\r\n    this.setState({\r\n      editNoteModal: ! this.state.editNoteModal\r\n    });\r\n  }\r\n  addNote() {\r\n      API.post('tuesdaySchedule',this.state.newNoteData).then((response) => {\r\n          let schedule = this.state.schedule;\r\n          schedule.push(response);\r\n          this.setState({schedule,newNoteModal:false,newNoteData:{\r\n              time:'',\r\n              note: '',\r\n          }})\r\n      });\r\n  }\r\n  updateNote() {\r\n    let { time,note } = this.state.editNoteData;\r\n    API.put('tuesdaySchedule/'+this.state.editNoteData.id,{time,note}).then((response)=> {\r\n        this._refreshSchedule();\r\n        this.setState({\r\n            editNoteModal: false, editNoteData: { id:'', time:'', note:''}\r\n        })\r\n    });\r\n    \r\n  }\r\n  editNote(id, time, note) {\r\n    this.setState({\r\n      editNoteData: { id, time, note }, editNoteModal: ! this.state.editNoteModal\r\n    });\r\n  }\r\n  deleteNote(id) {\r\n    API.delete('tuesdaySchedule/'+id)\r\n    .then(res => {\r\n        this._refreshSchedule();\r\n    })\r\n  }\r\n  _refreshSchedule() {\r\n    API.get('tuesdaySchedule')\r\n    .then(schedule => {\r\n        this.setState({schedule:schedule});\r\n    })\r\n  }\r\n  render() {\r\n    let schedule = this.state.schedule;\r\n    schedule=_.sortBy(schedule,o=>o.time).map((item) => {\r\n      return (\r\n        <tr key={item.id}>\r\n          <td>{item.time}</td>\r\n          <td>{item.note}</td>\r\n          <td>\r\n            <Button color=\"success\" size=\"sm\" className=\"mr-2\" onClick={this.editNote.bind(this, item.id,item.time, item.note)}>Edit</Button>\r\n            <IconButton aria-label=\"delete\" color=\"secondary\" onClick={this.deleteNote.bind(this, item.id)}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n    return (\r\n      <div className=\"Planner\">\r\n\r\n      <h1>Tuesday</h1>\r\n\r\n      <Button className=\"my-3\" color=\"primary\" onClick={this.toggleNewNoteModal.bind(this)}>Add a note/task</Button>\r\n\r\n      <Modal isOpen={this.state.newNoteModal} toggle={this.toggleNewNoteModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleNewNoteModal.bind(this)}>Add a new note</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"note\">Note/Task</Label>\r\n            <Input id=\"note\" value={this.state.newNoteData.note} onChange={(e) => {\r\n              let { newNoteData } = this.state;\r\n\r\n              newNoteData.note = e.target.value;\r\n\r\n              this.setState({ newNoteData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"time\">Time</Label>\r\n            <Input id=\"time\" type=\"time\" value={this.state.newNoteData.time} onChange={(e) => {\r\n              let { newNoteData } = this.state;\r\n\r\n              newNoteData.time = e.target.value;\r\n\r\n              this.setState({ newNoteData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.addNote.bind(this)}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleNewNoteModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={this.state.editNoteModal} toggle={this.toggleEditNoteModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleEditNoteModal.bind(this)}>Edit a new product</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"note\">Note/Task</Label>\r\n            <Input id=\"note\" value={this.state.editNoteData.note} onChange={(e) => {\r\n              let { editNoteData } = this.state;\r\n\r\n              editNoteData.note = e.target.value;\r\n\r\n              this.setState({ editNoteData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"time\">Time</Label>\r\n            <Input id=\"time\" type=\"time\" value={this.state.editNoteData.time} onChange={(e) => {\r\n              let { editNoteData } = this.state;\r\n\r\n              editNoteData.time = e.target.value;\r\n\r\n              this.setState({ editNoteData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.updateNote.bind(this)}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleEditNoteModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Schedule</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {schedule}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TuesdayDailyPlanner;","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nclass MainLayout extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navBar\">\r\n            <ul>\r\n                <li>\r\n                    <NavLink to=\"/\">Home</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/monday-schedule\">Monday</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/tuesday-schedule\">Tuesday</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/wednesday-schedule\">Wednesday</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/thursday-schedule\">Thursday</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/friday-schedule\">Friday</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/saturday-schedule\">Saturday</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/sunday-schedule\">Sunday</NavLink>\r\n                </li>\r\n            </ul>\r\n            {this.props.children}\r\n        </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainLayout;","import React, { Component } from 'react';\r\nimport API from '../api/API';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button } from 'reactstrap';\r\nimport * as _ from 'lodash';\r\n\r\nclass WednesdayDailyPlanner extends Component {\r\n    state = {\r\n    schedule: [],\r\n    newNoteData: {\r\n      time: '',\r\n      note: ''\r\n    },\r\n    editNoteData: {\r\n      id: '',\r\n      time: '',\r\n      note: ''\r\n    },\r\n    newNoteModal: false,\r\n    editNoteModal: false\r\n  }\r\n  componentWillMount() {\r\n    this._refreshSchedule();\r\n  }\r\n  toggleNewNoteModal() {\r\n    this.setState({\r\n      newNoteModal: ! this.state.newNoteModal\r\n    });\r\n  }\r\n  toggleEditNoteModal() {\r\n    this.setState({\r\n      editNoteModal: ! this.state.editNoteModal\r\n    });\r\n  }\r\n  addNote() {\r\n      API.post('wednesdaySchedule',this.state.newNoteData).then((response) => {\r\n          let schedule = this.state.schedule;\r\n          schedule.push(response);\r\n          this.setState({schedule,newNoteModal:false,newNoteData:{\r\n              time:'',\r\n              note: '',\r\n          }})\r\n      });\r\n  }\r\n  updateNote() {\r\n    let { time,note } = this.state.editNoteData;\r\n    API.put('wednesdaySchedule/'+this.state.editNoteData.id,{time,note}).then((response)=> {\r\n        this._refreshSchedule();\r\n        this.setState({\r\n            editNoteModal: false, editNoteData: { id:'', time:'', note:''}\r\n        })\r\n    });\r\n    \r\n  }\r\n  editNote(id, time, note) {\r\n    this.setState({\r\n      editNoteData: { id, time, note }, editNoteModal: ! this.state.editNoteModal\r\n    });\r\n  }\r\n  deleteNote(id) {\r\n    API.delete('wednesdaySchedule/'+id)\r\n    .then(res => {\r\n        this._refreshSchedule();\r\n    })\r\n  }\r\n  _refreshSchedule() {\r\n    API.get('wednesdaySchedule')\r\n    .then(schedule => {\r\n        this.setState({schedule:schedule});\r\n    })\r\n  }\r\n  render() {\r\n    let schedule = this.state.schedule;\r\n    schedule=_.sortBy(schedule,o=>o.time).map((item) => {\r\n      return (\r\n        <tr key={item.id}>\r\n          <td>{item.time}</td>\r\n          <td>{item.note}</td>\r\n          <td>\r\n            <Button color=\"success\" size=\"sm\" className=\"mr-2\" onClick={this.editNote.bind(this, item.id,item.time, item.note)}>Edit</Button>\r\n            <IconButton aria-label=\"delete\" color=\"secondary\" onClick={this.deleteNote.bind(this, item.id)}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n    return (\r\n      <div className=\"Planner\">\r\n      <h1 >Wednesday</h1>\r\n      <Button className=\"my-3\" color=\"primary\" onClick={this.toggleNewNoteModal.bind(this)}>Add a note/task</Button>\r\n\r\n      <Modal isOpen={this.state.newNoteModal} toggle={this.toggleNewNoteModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleNewNoteModal.bind(this)}>Add a new note</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"note\">Note/Task</Label>\r\n            <Input id=\"note\" value={this.state.newNoteData.note} onChange={(e) => {\r\n              let { newNoteData } = this.state;\r\n\r\n              newNoteData.note = e.target.value;\r\n\r\n              this.setState({ newNoteData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"time\">Time</Label>\r\n            <Input id=\"time\" type=\"time\" value={this.state.newNoteData.time} onChange={(e) => {\r\n              let { newNoteData } = this.state;\r\n\r\n              newNoteData.time = e.target.value;\r\n\r\n              this.setState({ newNoteData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.addNote.bind(this)}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleNewNoteModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={this.state.editNoteModal} toggle={this.toggleEditNoteModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleEditNoteModal.bind(this)}>Edit a new product</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"note\">Note/Task</Label>\r\n            <Input id=\"note\" value={this.state.editNoteData.note} onChange={(e) => {\r\n              let { editNoteData } = this.state;\r\n\r\n              editNoteData.note = e.target.value;\r\n\r\n              this.setState({ editNoteData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"time\">Time</Label>\r\n            <Input id=\"time\" type=\"time\" value={this.state.editNoteData.time} onChange={(e) => {\r\n              let { editNoteData } = this.state;\r\n\r\n              editNoteData.time = e.target.value;\r\n\r\n              this.setState({ editNoteData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.updateNote.bind(this)}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleEditNoteModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Schedule</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {schedule}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WednesdayDailyPlanner;","import React, { Component } from 'react';\r\nimport API from '../api/API';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button } from 'reactstrap';\r\nimport * as _ from 'lodash';\r\n\r\nclass ThursdayDailyPlanner extends Component {\r\n    state = {\r\n    schedule: [],\r\n    newNoteData: {\r\n      time: '',\r\n      note: ''\r\n    },\r\n    editNoteData: {\r\n      id: '',\r\n      time: '',\r\n      note: ''\r\n    },\r\n    newNoteModal: false,\r\n    editNoteModal: false\r\n  }\r\n  componentWillMount() {\r\n    this._refreshSchedule();\r\n  }\r\n  toggleNewNoteModal() {\r\n    this.setState({\r\n      newNoteModal: ! this.state.newNoteModal\r\n    });\r\n  }\r\n  toggleEditNoteModal() {\r\n    this.setState({\r\n      editNoteModal: ! this.state.editNoteModal\r\n    });\r\n  }\r\n  addNote() {\r\n      API.post('thursdaySchedule',this.state.newNoteData).then((response) => {\r\n          let schedule = this.state.schedule;\r\n          schedule.push(response);\r\n          this.setState({schedule,newNoteModal:false,newNoteData:{\r\n              time:'',\r\n              note: '',\r\n          }})\r\n      });\r\n  }\r\n  updateNote() {\r\n    let { time,note } = this.state.editNoteData;\r\n    API.put('thursdaySchedule/'+this.state.editNoteData.id,{time,note}).then((response)=> {\r\n        this._refreshSchedule();\r\n        this.setState({\r\n            editNoteModal: false, editNoteData: { id:'', time:'', note:''}\r\n        })\r\n    });\r\n    \r\n  }\r\n  editNote(id, time, note) {\r\n    this.setState({\r\n      editNoteData: { id, time, note }, editNoteModal: ! this.state.editNoteModal\r\n    });\r\n  }\r\n  deleteNote(id) {\r\n    API.delete('thursdaySchedule/'+id)\r\n    .then(res => {\r\n        this._refreshSchedule();\r\n    })\r\n  }\r\n  _refreshSchedule() {\r\n    API.get('thursdaySchedule')\r\n    .then(schedule => {\r\n        this.setState({schedule:schedule});\r\n    })\r\n  }\r\n  render() {\r\n    let schedule = this.state.schedule;\r\n    schedule=_.sortBy(schedule,o=>o.time).map((item) => {\r\n      return (\r\n        <tr key={item.id}>\r\n          <td>{item.time}</td>\r\n          <td>{item.note}</td>\r\n          <td>\r\n            <Button color=\"success\" size=\"sm\" className=\"mr-2\" onClick={this.editNote.bind(this, item.id,item.time, item.note)}>Edit</Button>\r\n            <IconButton aria-label=\"delete\" color=\"secondary\" onClick={this.deleteNote.bind(this, item.id)}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n    return (\r\n      <div className=\"Planner\">\r\n\r\n      <h1>Thursday</h1>\r\n\r\n      <Button className=\"my-3\" color=\"primary\" onClick={this.toggleNewNoteModal.bind(this)}>Add a note/task</Button>\r\n\r\n      <Modal isOpen={this.state.newNoteModal} toggle={this.toggleNewNoteModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleNewNoteModal.bind(this)}>Add a new note</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"note\">Note/Task</Label>\r\n            <Input id=\"note\" value={this.state.newNoteData.note} onChange={(e) => {\r\n              let { newNoteData } = this.state;\r\n\r\n              newNoteData.note = e.target.value;\r\n\r\n              this.setState({ newNoteData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"time\">Time</Label>\r\n            <Input id=\"time\" type=\"time\" value={this.state.newNoteData.time} onChange={(e) => {\r\n              let { newNoteData } = this.state;\r\n\r\n              newNoteData.time = e.target.value;\r\n\r\n              this.setState({ newNoteData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.addNote.bind(this)}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleNewNoteModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={this.state.editNoteModal} toggle={this.toggleEditNoteModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleEditNoteModal.bind(this)}>Edit a new product</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"note\">Note/Task</Label>\r\n            <Input id=\"note\" value={this.state.editNoteData.note} onChange={(e) => {\r\n              let { editNoteData } = this.state;\r\n\r\n              editNoteData.note = e.target.value;\r\n\r\n              this.setState({ editNoteData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"time\">Time</Label>\r\n            <Input id=\"time\" type=\"time\" value={this.state.editNoteData.time} onChange={(e) => {\r\n              let { editNoteData } = this.state;\r\n\r\n              editNoteData.time = e.target.value;\r\n\r\n              this.setState({ editNoteData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.updateNote.bind(this)}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleEditNoteModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Schedule</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {schedule}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThursdayDailyPlanner;","import React, { Component } from 'react';\r\nimport API from '../api/API';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button } from 'reactstrap';\r\nimport * as _ from 'lodash';\r\n\r\nclass FridayDailyPlanner extends Component {\r\n    state = {\r\n    schedule: [],\r\n    newNoteData: {\r\n      time: '',\r\n      note: ''\r\n    },\r\n    editNoteData: {\r\n      id: '',\r\n      time: '',\r\n      note: ''\r\n    },\r\n    newNoteModal: false,\r\n    editNoteModal: false\r\n  }\r\n  componentWillMount() {\r\n    this._refreshSchedule();\r\n  }\r\n  toggleNewNoteModal() {\r\n    this.setState({\r\n      newNoteModal: ! this.state.newNoteModal\r\n    });\r\n  }\r\n  toggleEditNoteModal() {\r\n    this.setState({\r\n      editNoteModal: ! this.state.editNoteModal\r\n    });\r\n  }\r\n  addNote() {\r\n      API.post('fridaySchedule',this.state.newNoteData).then((response) => {\r\n          let schedule = this.state.schedule;\r\n          schedule.push(response);\r\n          this.setState({schedule,newNoteModal:false,newNoteData:{\r\n              time:'',\r\n              note: '',\r\n          }})\r\n      });\r\n  }\r\n  updateNote() {\r\n    let { time,note } = this.state.editNoteData;\r\n    API.put('fridaySchedule/'+this.state.editNoteData.id,{time,note}).then((response)=> {\r\n        this._refreshSchedule();\r\n        this.setState({\r\n            editNoteModal: false, editNoteData: { id:'', time:'', note:''}\r\n        })\r\n    });\r\n    \r\n  }\r\n  editNote(id, time, note) {\r\n    this.setState({\r\n      editNoteData: { id, time, note }, editNoteModal: ! this.state.editNoteModal\r\n    });\r\n  }\r\n  deleteNote(id) {\r\n    API.delete('fridaySchedule/'+id)\r\n    .then(res => {\r\n        this._refreshSchedule();\r\n    })\r\n  }\r\n  _refreshSchedule() {\r\n    API.get('fridaySchedule')\r\n    .then(schedule => {\r\n        this.setState({schedule:schedule});\r\n    })\r\n  }\r\n  render() {\r\n    let schedule = this.state.schedule;\r\n    schedule=_.sortBy(schedule,o=>o.time).map((item) => {\r\n      return (\r\n        <tr key={item.id}>\r\n          <td>{item.time}</td>\r\n          <td>{item.note}</td>\r\n          <td>\r\n            <Button color=\"success\" size=\"sm\" className=\"mr-2\" onClick={this.editNote.bind(this, item.id,item.time, item.note)}>Edit</Button>\r\n            <IconButton aria-label=\"delete\" color=\"secondary\" onClick={this.deleteNote.bind(this, item.id)}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n    return (\r\n      <div className=\"Planner\">\r\n\r\n      <h1>Friday</h1>\r\n\r\n      <Button className=\"my-3\" color=\"primary\" onClick={this.toggleNewNoteModal.bind(this)}>Add a note/task</Button>\r\n\r\n      <Modal isOpen={this.state.newNoteModal} toggle={this.toggleNewNoteModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleNewNoteModal.bind(this)}>Add a new note</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"note\">Note/Task</Label>\r\n            <Input id=\"note\" value={this.state.newNoteData.note} onChange={(e) => {\r\n              let { newNoteData } = this.state;\r\n\r\n              newNoteData.note = e.target.value;\r\n\r\n              this.setState({ newNoteData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"time\">Time</Label>\r\n            <Input id=\"time\" type=\"time\" value={this.state.newNoteData.time} onChange={(e) => {\r\n              let { newNoteData } = this.state;\r\n\r\n              newNoteData.time = e.target.value;\r\n\r\n              this.setState({ newNoteData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.addNote.bind(this)}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleNewNoteModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={this.state.editNoteModal} toggle={this.toggleEditNoteModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleEditNoteModal.bind(this)}>Edit a new product</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"note\">Note/Task</Label>\r\n            <Input id=\"note\" value={this.state.editNoteData.note} onChange={(e) => {\r\n              let { editNoteData } = this.state;\r\n\r\n              editNoteData.note = e.target.value;\r\n\r\n              this.setState({ editNoteData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"time\">Time</Label>\r\n            <Input id=\"time\" type=\"time\" value={this.state.editNoteData.time} onChange={(e) => {\r\n              let { editNoteData } = this.state;\r\n\r\n              editNoteData.time = e.target.value;\r\n\r\n              this.setState({ editNoteData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.updateNote.bind(this)}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleEditNoteModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Schedule</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {schedule}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FridayDailyPlanner;","import React, { Component } from 'react';\r\nimport API from '../api/API';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button } from 'reactstrap';\r\nimport * as _ from 'lodash';\r\n\r\nclass SaturdayDailyPlanner extends Component {\r\n    state = {\r\n    schedule: [],\r\n    newNoteData: {\r\n      time: '',\r\n      note: ''\r\n    },\r\n    editNoteData: {\r\n      id: '',\r\n      time: '',\r\n      note: ''\r\n    },\r\n    newNoteModal: false,\r\n    editNoteModal: false\r\n  }\r\n  componentWillMount() {\r\n    this._refreshSchedule();\r\n  }\r\n  toggleNewNoteModal() {\r\n    this.setState({\r\n      newNoteModal: ! this.state.newNoteModal\r\n    });\r\n  }\r\n  toggleEditNoteModal() {\r\n    this.setState({\r\n      editNoteModal: ! this.state.editNoteModal\r\n    });\r\n  }\r\n  addNote() {\r\n      API.post('saturdaySchedule',this.state.newNoteData).then((response) => {\r\n          let schedule = this.state.schedule;\r\n          schedule.push(response);\r\n          this.setState({schedule,newNoteModal:false,newNoteData:{\r\n              time:'',\r\n              note: '',\r\n          }})\r\n      });\r\n  }\r\n  updateNote() {\r\n    let { time,note } = this.state.editNoteData;\r\n    API.put('saturdaySchedule/'+this.state.editNoteData.id,{time,note}).then((response)=> {\r\n        this._refreshSchedule();\r\n        this.setState({\r\n            editNoteModal: false, editNoteData: { id:'', time:'', note:''}\r\n        })\r\n    });\r\n    \r\n  }\r\n  editNote(id, time, note) {\r\n    this.setState({\r\n      editNoteData: { id, time, note }, editNoteModal: ! this.state.editNoteModal\r\n    });\r\n  }\r\n  deleteNote(id) {\r\n    API.delete('saturdaySchedule/'+id)\r\n    .then(res => {\r\n        this._refreshSchedule();\r\n    })\r\n  }\r\n  _refreshSchedule() {\r\n    API.get('saturdaySchedule')\r\n    .then(schedule => {\r\n        this.setState({schedule:schedule});\r\n    })\r\n  }\r\n  render() {\r\n    let schedule = this.state.schedule;\r\n    schedule=_.sortBy(schedule,o=>o.time).map((item) => {\r\n      return (\r\n        <tr key={item.id}>\r\n          <td>{item.time}</td>\r\n          <td>{item.note}</td>\r\n          <td>\r\n            <Button color=\"success\" size=\"sm\" className=\"mr-2\" onClick={this.editNote.bind(this, item.id,item.time, item.note)}>Edit</Button>\r\n            <IconButton aria-label=\"delete\" color=\"secondary\" onClick={this.deleteNote.bind(this, item.id)}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n    return (\r\n      <div className=\"Planner\">\r\n\r\n      <h1>Saturday</h1>\r\n\r\n      <Button className=\"my-3\" color=\"primary\" onClick={this.toggleNewNoteModal.bind(this)}>Add a note/task</Button>\r\n\r\n      <Modal isOpen={this.state.newNoteModal} toggle={this.toggleNewNoteModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleNewNoteModal.bind(this)}>Add a new note</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"note\">Note/Task</Label>\r\n            <Input id=\"note\" value={this.state.newNoteData.note} onChange={(e) => {\r\n              let { newNoteData } = this.state;\r\n\r\n              newNoteData.note = e.target.value;\r\n\r\n              this.setState({ newNoteData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"time\">Time</Label>\r\n            <Input id=\"time\" type=\"time\" value={this.state.newNoteData.time} onChange={(e) => {\r\n              let { newNoteData } = this.state;\r\n\r\n              newNoteData.time = e.target.value;\r\n\r\n              this.setState({ newNoteData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.addNote.bind(this)}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleNewNoteModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={this.state.editNoteModal} toggle={this.toggleEditNoteModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleEditNoteModal.bind(this)}>Edit a new product</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"note\">Note/Task</Label>\r\n            <Input id=\"note\" value={this.state.editNoteData.note} onChange={(e) => {\r\n              let { editNoteData } = this.state;\r\n\r\n              editNoteData.note = e.target.value;\r\n\r\n              this.setState({ editNoteData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"time\">Time</Label>\r\n            <Input id=\"time\" type=\"time\" value={this.state.editNoteData.time} onChange={(e) => {\r\n              let { editNoteData } = this.state;\r\n\r\n              editNoteData.time = e.target.value;\r\n\r\n              this.setState({ editNoteData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.updateNote.bind(this)}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleEditNoteModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Schedule</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {schedule}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SaturdayDailyPlanner;","import React, { Component } from 'react';\r\nimport API from '../api/API';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button } from 'reactstrap';\r\nimport * as _ from 'lodash';\r\n\r\nclass SundayDailyPlanner extends Component {\r\n    state = {\r\n    schedule: [],\r\n    newNoteData: {\r\n      time: '',\r\n      note: ''\r\n    },\r\n    editNoteData: {\r\n      id: '',\r\n      time: '',\r\n      note: ''\r\n    },\r\n    newNoteModal: false,\r\n    editNoteModal: false\r\n  }\r\n  componentWillMount() {\r\n    this._refreshSchedule();\r\n  }\r\n  toggleNewNoteModal() {\r\n    this.setState({\r\n      newNoteModal: ! this.state.newNoteModal\r\n    });\r\n  }\r\n  toggleEditNoteModal() {\r\n    this.setState({\r\n      editNoteModal: ! this.state.editNoteModal\r\n    });\r\n  }\r\n  addNote() {\r\n      API.post('sundaySchedule',this.state.newNoteData).then((response) => {\r\n          let schedule = this.state.schedule;\r\n          schedule.push(response);\r\n          this.setState({schedule,newNoteModal:false,newNoteData:{\r\n              time:'',\r\n              note: '',\r\n          }})\r\n      });\r\n  }\r\n  updateNote() {\r\n    let { time,note } = this.state.editNoteData;\r\n    API.put('sundaySchedule/'+this.state.editNoteData.id,{time,note}).then((response)=> {\r\n        this._refreshSchedule();\r\n        this.setState({\r\n            editNoteModal: false, editNoteData: { id:'', time:'', note:''}\r\n        })\r\n    });\r\n    \r\n  }\r\n  editNote(id, time, note) {\r\n    this.setState({\r\n      editNoteData: { id, time, note }, editNoteModal: ! this.state.editNoteModal\r\n    });\r\n  }\r\n  deleteNote(id) {\r\n    API.delete('sundaySchedule/'+id)\r\n    .then(res => {\r\n        this._refreshSchedule();\r\n    })\r\n  }\r\n  _refreshSchedule() {\r\n    API.get('sundaySchedule')\r\n    .then(schedule => {\r\n        this.setState({schedule:schedule});\r\n    })\r\n  }\r\n  render() {\r\n    let schedule = this.state.schedule;\r\n    schedule=_.sortBy(schedule,o=>o.time).map((item) => {\r\n      return (\r\n        <tr key={item.id}>\r\n          <td>{item.time}</td>\r\n          <td>{item.note}</td>\r\n          <td>\r\n            <Button color=\"success\" size=\"sm\" className=\"mr-2\" onClick={this.editNote.bind(this, item.id,item.time, item.note)}>Edit</Button>\r\n            <IconButton aria-label=\"delete\" color=\"secondary\" onClick={this.deleteNote.bind(this, item.id)}>\r\n                <DeleteIcon />\r\n                </IconButton>\r\n          </td>\r\n        </tr>\r\n      )\r\n    });\r\n    return (\r\n      <div className=\"Planner\">\r\n\r\n      <h1>Sunday</h1>\r\n\r\n      <Button className=\"my-3\" color=\"primary\" onClick={this.toggleNewNoteModal.bind(this)}>Add a note/task</Button>\r\n\r\n      <Modal isOpen={this.state.newNoteModal} toggle={this.toggleNewNoteModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleNewNoteModal.bind(this)}>Add a new note</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"note\">Note/Task</Label>\r\n            <Input id=\"note\" value={this.state.newNoteData.note} onChange={(e) => {\r\n              let { newNoteData } = this.state;\r\n\r\n              newNoteData.note = e.target.value;\r\n\r\n              this.setState({ newNoteData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"time\">Time</Label>\r\n            <Input id=\"time\" type=\"time\" value={this.state.newNoteData.time} onChange={(e) => {\r\n              let { newNoteData } = this.state;\r\n\r\n              newNoteData.time = e.target.value;\r\n\r\n              this.setState({ newNoteData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.addNote.bind(this)}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleNewNoteModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={this.state.editNoteModal} toggle={this.toggleEditNoteModal.bind(this)}>\r\n        <ModalHeader toggle={this.toggleEditNoteModal.bind(this)}>Edit a new product</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"note\">Note/Task</Label>\r\n            <Input id=\"note\" value={this.state.editNoteData.note} onChange={(e) => {\r\n              let { editNoteData } = this.state;\r\n\r\n              editNoteData.note = e.target.value;\r\n\r\n              this.setState({ editNoteData });\r\n            }} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"time\">Time</Label>\r\n            <Input id=\"time\" type=\"time\" value={this.state.editNoteData.time} onChange={(e) => {\r\n              let { editNoteData } = this.state;\r\n\r\n              editNoteData.time = e.target.value;\r\n\r\n              this.setState({ editNoteData });\r\n            }} />\r\n          </FormGroup>\r\n\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={this.updateNote.bind(this)}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={this.toggleEditNoteModal.bind(this)}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Schedule</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {schedule}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SundayDailyPlanner;","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Home from './pages/Home';\nimport MondayDailyPlanner from './pages/MondayDailyPlanner';\nimport TuesdayDailyPlanner from './pages/TuesdayDailyPlanner';\nimport MainLayout from './layouts/MainLayout';\nimport WednesdayDailyPlanner from './pages/WednesdayDailyPlanner';\nimport ThursdayDailyPlanner from './pages/ThursdayDailyPlanner';\nimport FridayDailyPlanner from './pages/FridayDailyPlanner';\nimport SaturdayDailyPlanner from './pages/SaturdayDailyPlanner';\nimport SundayDailyPlanner from './pages/SundayDailyPlanner';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div className=\"App\">\n      <MainLayout>\n        <Switch>\n        <Route path={\"/\"} exact component={Home}/> \n        <Route path={\"/monday-schedule\"} component={MondayDailyPlanner}/>\n        <Route path={\"/tuesday-schedule\"} component={TuesdayDailyPlanner}/>\n        <Route path={\"/wednesday-schedule\"} component={WednesdayDailyPlanner}/>\n        <Route path={\"/thursday-schedule\"} component={ThursdayDailyPlanner}/>\n        <Route path={\"/friday-schedule\"} component={FridayDailyPlanner}/>\n        <Route path={\"/saturday-schedule\"} component={SaturdayDailyPlanner}/>\n        <Route path={\"/sunday-schedule\"} component={SundayDailyPlanner}/>\n        </Switch>\n      </MainLayout>\n      </div>\n    </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}